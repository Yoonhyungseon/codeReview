'''
N개의 숫자가 주어졌을 때, 주어진 숫자들 중 최댓값의 위치를 출력합니다. 만약 최댓값이 여러 개라면, 가장 왼쪽에 있는 최댓값의 위치를 출력합니다.
그 이후에는 위에서 구한 최댓값의 위치보다 더 왼쪽에 있는 숫자들 중 최댓값을 구해 그 위치를 출력합니다. 이 경우에도 최댓값이 여러 개라면, 가장 왼쪽에 있는 최댓값의 위치를 출력합니다.
위의 과정을 끊임없이 반복하며, 최종적으로 첫 번째 원소가 뽑히게 되면 이 과정을 종료합니다. 이러한 과정을 거쳐 구해진 최댓값의 위치들을 출력하는 프로그램을 작성해보세요.

입력 형식
첫 번째 줄에는 원소의 수를 나타내는 N이 주어집니다.
두 번째 줄에는 N개의 원소가 공백을 사이에 두고 주어집니다.

1 ≤ N ≤ 1,000
1 ≤ 원소의 크기 ≤ 1,000

출력 형식
가장 왼쪽에 있는 최댓값의 위치들을 순서대로 공백을 사이에 두고 출력합니다. 위치는 1부터 N사이의 숫자로 나타내야 하며, 항상 답이 1로 끝나야 함에 유의합니다.

입출력 예제
예제1
입력:
5
3 3 5 4 5

출력: 
3 1

예제2
입력:
5
1 3 3 5 5

출력: 
4 2 1

예제 설명
첫 번째 예제에서 최댓값 중 가장 왼쪽에 있는 원소는 세 번째 원소 입니다.
그 다음 세 번째 원소보다 좌측에 있으면서 최댓값을 갖는 가장 왼쪽에 있는 원소는 첫 번째 원소 입니다. 따라서 3 1을 출력하면 됩니다.
'''

n = int(input())
arr = list(map(int, input().strip().split(" ")))
answer = []

while True:
    max_ = max(arr)
    answer.append(arr.index(max_)+1)
    
    arr = arr[:arr.index(max_)]

    if len(arr) == 0:
        break

print(" " .join(map(str, answer)))
