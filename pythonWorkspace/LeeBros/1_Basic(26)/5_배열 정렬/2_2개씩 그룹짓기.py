'''
2 * N개의 숫자가 주어졌을 때, 겹치지 않으면서 2개의 원소가 하나의 그룹을 이루도록 하여 총 N개의 그룹을 만드려고 합니다.
적절하게 그룹을 만들어 각 그룹에 있는 원소의 합 중 최댓값이 최소가 되도록 하는 프로그램을 작성해보세요.

예를 들어 N = 2, 주어진 원소가 3, 5, 5, 2 였을 때
그룹을 [5, 5], [3, 2]로 나눈다면 각 그룹에 있는 원소의 합은 순서대로 10, 5 이므로 이 중 최댓값은 10이 됩니다.
만약 그룹을 [3, 5], [5, 2]로 나눈다면 각 그룹에 있는 원소의 합은 순서대로 8, 7 이 되므로
이 중 최댓값은 8이 되며 이보다 최댓값을 더 작게 만들 수는 없습니다.

입력 형식
첫 번째 줄에는 만들어야 하는 그룹의 수를 나타내는 N이 주어집니다.
두 번째 줄에는 2 * N개의 숫자가 공백을 사이에 두고 주어집니다.

1 ≤ N ≤ 1,000
1 ≤ 원소 ≤ 1,000

출력 형식
각 그룹의 원소의 합의 최대값이 가장 작아질 수 있도록 N개의 그룹을 적절히 만들었을 때의 최댓값을 출력해주세요.

입출력 예제
예제1
입력:
2
3 5 5 2

출력: 
8

예제2
입력:
3
8 2 7 1 3 5

출력: 
9
'''

n = int(input())
arr = list(map(int, input().strip().split()))
arr.sort()
max_ = -1

for i in range(len(arr)//2):
    if max_ < arr[i] + arr[len(arr)-1-i]:
        max_ = arr[i] + arr[len(arr)-1-i]

print(max_)
     

    
        